@model  IPagedList<VRhfo.BL.Models.Video>
@using X.PagedList.Mvc.Core; 
@using X.PagedList;
@using X.PagedList.Web.Common
@{
    ViewData["Title"] = "Video Gallery";
}
<style>
    .card-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
        gap: 8px;
        justify-content: center;
        margin-top: 70px;
        padding: 0 0px; /* Added padding to the sides */
        gap: 0px;
        margin-right: 90px;
        margin-left: 80px;
    }

    .card {
        border-radius: 8px 8px 8px 8px;
        text-align: center;
        margin: 0;
        margin-top: 20px;
        border: none;
        background-color: black;
        padding: 10px; /* Moved padding from .card-container to here */
        margin-top: 0px;
        padding: 6px; /* Moved padding from .card-container to here */
        width: 100%;
    }

    .vid-img {
        max-width: 100%; /* Changed from a fixed height to a max-width */
        height: auto; /* Ensures aspect ratio is maintained */
        border-radius: 8px 8px 8px 8px;
        height: 300px;
        padding: 1px;
        min-width: 200px;
        object-fit: cover;
    }


    .description {
        background-color: black;
        min-height: 20px;
        padding: 10px;
        margin: 0;
        font-size: small;
        text-align: left;
        height: 80px;
        color: #ffffff; /* added color white for text visibility on black background */
    }

    p {
        color: darkgrey;
        margin: 0;
        padding: 0;
    }

    @@media (max-width: 1170px) {
        .card-container {
            grid-template-columns: repeat(2, 1fr); /* Create two equal-width columns */
        }
    }

    @@media (max-width: 660px) {
        .card-container {
            margin: 0;
            grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
        }

    }



    <!--PAGINATION -->
 

        .pagination ul {
            display: inline-block;
        }

        .pagination li {
            display: inline;
            margin: 0 5px;
        }

            .pagination li a {
                color: white;
                background-color: black;
                padding: 8px 16px;
                border: 2px solid #ddd;
                font-weight: 800;
            }

            .pagination li.active a {
                background-color: #4CAF50 !important;
                color: white;
            }

            .page-links{
        text-align: center;
    }

    .pagination-container { /* Add a container around the pagination */
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative; /* Make the container a positioning reference */
        margin-bottom: 20px; /* Add margin to the bottom to push it away from content */
        margin-top: 150px;
    }

    .pagination {
        position: absolute; /* Position the pagination absolutely within the container */
        bottom: 0;
        left: 50%;
        transform: translateX(-50%);
    }
</style>

<div class="card-container">
    @foreach (var item in Model)
    {
        <div class="card">
            <a asp-controller="Video" asp-action="Watch" asp-route-title="@item.Title">
                <img class="vid-img" src="~/img/@item.ThumbnailUrl" alt="@item.Title" style="width: 100%;">
            </a>
            <div class="description">
                <h4>@item.Title</h4>
                <p>@item.Category</p>
                <p>@item.Description</p>
            </div>
        </div>
    }

</div>

<div class="pagination-container">
    <div class="pagination">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), PagedListRenderOptions.OnlyShowFivePagesAtATime)
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/three@0.127.0/examples/js/loaders/VideoTextureLoader.js"></script>
<script src="https://cdn.jsdelivr.net/npm/three@0.127.0/examples/js/vr/WebXR.js"></script>
<script src="https://threejs.org/build/three.min.js"></script>

@* <script>
    document.addEventListener('DOMContentLoaded', function () {
        // Set up renderer
        var renderer = new THREE.WebGLRenderer();
        renderer.setSize(window.innerWidth, window.innerHeight);
        document.body.appendChild(renderer.domElement);

        // Set up camera
        var camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.1, 10);
        camera.position.set(0, 1.6, 0);

        // Set up scene
        var scene = new THREE.Scene();

        // Set up VR
        var controller = new THREE.WebXRController();

        // Set up video texture
        var video = document.createElement('video');
        video.src = @Url.Content("~/video/spiralshort.mp4");
        video.crossOrigin = 'anonymous';
        video.loop = true;
        video.muted = true;
        video.play();

        var videoTexture = new THREE.VideoTexture(video);
        videoTexture.minFilter = THREE.LinearFilter;
        videoTexture.magFilter = THREE.LinearFilter;
        videoTexture.format = THREE.RGBFormat;

        // Set up sphere geometry
        var geometry = new THREE.SphereGeometry(5, 60, 40);
        var material = new THREE.MeshBasicMaterial({ map: videoTexture, side: THREE.DoubleSide });
        var sphere = new THREE.Mesh(geometry, material);
        scene.add(sphere);

        // Render loop
        function animate() {
            renderer.render(scene, camera);
            requestAnimationFrame(animate);
        }
        animate();
    });
</script> *@