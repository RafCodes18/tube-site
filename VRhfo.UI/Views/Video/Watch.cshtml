@model VRhfo.UI.Views.ViewModels.VideoViewModel

@{
    ViewData["Title"] = "Video - vrhfo.com";


}

<style>
    .suggested{
        margin-left: 20px;
    }

    .vid-details{
        margin-left: 110px;
        margin-top: 15px;       
    }

    
    .lik-box{
        padding: 0;
        height: 30px;
        background-color: black;
        margin-bottom: -20px;

    }

        .lik-box.p {
            padding: 22px;
        }

        .sug{
        border-radius: 10px !important;
        
        }

        .sug-card{
            width: 100px;
            margin-left: 40px;
            margin-right: 8px;
    }
    .sug-card:hover{
            z-index: 999;
        }
      
        .sug-img{
           width: 215px;
        }
        .sug-img:hover{
        -webkit-box-shadow: 10 10  hotpink;
        box-shadow: 0 0 10px rgb(255, 0, 255);
        z-index: -999;
        }

        .vid{
            margin-left: 50px;
        }

    /* Add this to your existing styles */
    .separator {
        position: absolute;

        height: 33px; /* Adjust thickness as desired */
        background-color: #ccc; /* Adjust color as desired */
        margin: 10px 0; /* Adjust spacing above/below the line */
    }
    .sug-title{
        width: 200px;
        flex-wrap: wrap;
    }

    .vid-details-top-row{
        display: flex;
        justify-content: space-between;
    }

    .vid-details-top-row p {
        font-size: large;
    }
    .page-left-container{
        max-width: 70%;
    }
    .vid-player{
        height: 500px; width: 700px;
    }

    .canvas-container {
        position: relative;
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 30px;
        flex-direction: column;
        
    }

    #videoCanvas {
/*         outline: 1px solid white;
 */         max-width: 100%;
        height: auto;
    }

    .canvas-details{
        width: 76%;
     }





     @@media (max-width: 1109px) {
    /* Styles for screens below 1110 pixels */
    .canvas-container {
        width: 100%;
    }

    #videoCanvas {
        width: 100%;
        height: auto;
    }

    /* Add additional styles for other elements */
    .page-left-container {
        max-width: 100%;
    }

    .vid-details {
        margin-left: 0;       
    }

    .suggested {
        margin-left: 0;
        grid-template-columns: repeat(2, 1fr); /* Adjust the number of columns as needed */
    }
}



    .o-icon-svg {
        pointer-events: none;
        display: block;
        width: 100%;
        height: 100%;
    }

    .o-icon {
        display: -webkit-inline-box;
        display: -ms-inline-flexbox;
        display: inline-flex;
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: center;
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        justify-content: center;
        position: relative;
        vertical-align: middle;
        fill: grey;
        width: 24px;
        height: 24px;
    }
</style>

 
<div class="page-left-container">

    @if (Model.video.Title == "Lana Rhoades")
    {
        <!-- Video Player -->
        <div class="vid-player">
            <video class="vid" width="700" height="500" controls>
                <source src="~/video/@Model.video.VideoUrl" type="video/mp4" >
                Your browser does not support the video tag.
            </video>
        </div>
        <!--Vid details-->
        <div class="vid-details">
            <div class="vid-details-top-row">
                <h2>@Model.video.Title</h2>
                <p>@Model.video.AverageRating</p>
            </div>
            <div class="vid-details-bottom-row">
                <p>@Model.video.Category</p>
            </div>
        </div>
    }
    else
    {
        <!-- Canvas Player -->
        <div class="canvas-container">
            <canvas id="videoCanvas"></canvas>
            <!--Vid details-->
            <div class="canvas-details">
                <div class="vid-details-top-row">
                    <h2>@Model.video.Title</h2>
                    <p>                      
                        <svg class="o-icon o-icon-svg" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path d="M1 22h4V10H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 2 7.59 8.59C7.22 8.95 7 9.45 7 10v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z" fill-rule="nonzero">
                                <path d="M1 22h4V10H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 2 7.59 8.59C7.22 8.95 7 9.45 7 10v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z" fill-rule="nonzero"></path>
                        </svg>
                            @Model.video.FormattedLikes  |
                        <svg class="o-icon o-icon-svg" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M23 2h-4v12h4V2zM1 13c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 22l6.58-6.59c.37-.36.59-.86.59-1.41V4c0-1.1-.9-2-2-2H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2z" fill-rule="nonzero"></path></svg>    @Model.video.FormattedDislikes
                    </p>
                </div>
                <div class="vid-details-bottom-row">
                    <p>@Model.video.Category</p>
                </div>
            </div>
        </div>
       
    }

    <div class="comments-container">
        <div class="comments-header">
            <p>Top</p>

        </div>
    </div>


    
    
      <!-- Suggested videos -->
    @* <div class="suggested" style="width: 90%; display: grid; grid-template-columns: repeat(4, 1fr); grid-gap: 0px;">
        @for (int i = 0; i < Model.suggestedVideos.Count; i++)
        {
            <div class="sug-card">
                <a asp-controller="Video" asp-action="Watch" asp-route-title="@Model.suggestedVideos[i].Title">
                    <img width="180" src="~/img/@Model.suggestedVideos[i].ThumbnailUrl" alt="@Model.suggestedVideos[i].Title" class="sug sug-img" />
                </a>
                <p class="sug-title">@Model.suggestedVideos[i].Title</p>
            </div>

            @if ((i + 1) % 2 == 0 && i < Model.suggestedVideos.Count - 1)
            {
                <div class="separator"></div>
            }
        }
    </div>   *@

</div>
<script defer type="module">
    import * as THREE from '/js/three.module.js';

    // Get reference to the video player container
    const videoPlayerContainer = document.getElementById('videoPlayerContainer');
    const canvas = document.getElementById('videoCanvas');

    canvas.width = 860;
    canvas.height = 515;

    // Create WebGL renderer with canvas
    const renderer = new THREE.WebGLRenderer({ canvas });

    // Create a scene and camera
    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, canvas.width / canvas.height, 0.1, 1000);

    // Create a sphere geometry and add it to the scene
    const geometry = new THREE.SphereGeometry(6, 32, 32); // Radius, width segments, height segments
    const material = new THREE.MeshPhongMaterial({ color: 0x20b2aa, shininess: 80 });
    const sphere = new THREE.Mesh(geometry, material);
    scene.add(sphere);

    // Create edges for visualization (optional)
    const edges = new THREE.EdgesGeometry(geometry);
    const line = new THREE.LineSegments(edges, new THREE.LineBasicMaterial({ color: 0x000000 }));
    scene.add(line);

    //add light
    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);
    directionalLight.position.set(1, 1, 2); // Adjust position as needed
    scene.add(directionalLight);

    // Position the camera
    camera.position.z = 10;
    camera.position.y = 0;

    // Function to animate the scene
    function animate() {
        requestAnimationFrame(animate);
        sphere.rotation.x += 0.01;
        sphere.rotation.y += 0.01;
        line.rotation.x += 0.01;
        line.rotation.y += 0.01;
        renderer.render(scene, camera);
    }
    animate();




</script>