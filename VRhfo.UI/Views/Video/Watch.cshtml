@model VRhfo.UI.Views.ViewModels.VideoViewModel
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Video - vrhfo.com";
     
        var username = HttpContextAccessor.HttpContext?.Session.GetString("username");    
}

<script type="text/javascript" src="~/js/VideoPlayer.js" defer></script>
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&family=Kanit:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
<style>
    @@media(max-width: 500px) {

        
        .center-footer{
          padding-bottom: 108px !important;
          margin-top: -150px !important;
        }
    }
    <!-- DIAMOND AND LIKE BUTTONS -->
    .o-icon-svg {
        pointer-events: none;
        display: block;
        width: 100%;
        height: 100%;
    }

    .o-icon {
        display: -webkit-inline-box;
        display: -ms-inline-flexbox;
        display: inline-flex;
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: center;
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        justify-content: center;
        position: relative;
        vertical-align: middle;
        fill: grey;
        width: 24px;
        height: 24px;
    }

    <!--SUGGESTED VIDEOS -->
    .suggested{
        margin-left: 20px;
    }

    <!--VIDEO DETAILS CONTAINER -->
    .canvas-details{
        margin-top: 13px !important;

    }
    .vid-details{
        margin-left: 110px;
        margin-top: 19px;
    }
    .lik-box{
        padding: 0;
        height: 30px;
        background-color: black;
        margin-bottom: -20px;
    }
        .lik-box.p {
            padding: 22px;
        }

        .sug{
        border-radius: 10px !important;
        
        }

        .sug-card{
            width: 100px;
            margin-left: 40px;
            margin-right: 8px;
    }
    .sug-card:hover{
            z-index: 999;
            box-shadow: 5px 5px 40px 8px var(--primary-color-card-hover) !important;
        }
      
        .sug-img{
            border-radius: 5px;
            object-fit: cover;
            max-height: 120px;
            width: 180PX;
            min-width: 150px !important;
        }
        .video{
        max-height: 230px !important;
    }
        .video:hover{
            outline: 1px solid #444;
        border-radius: 5px;
        background-color: #262626;
            -webkit-box-shadow: 10px 10px var(--primary-color-hover);
            box-shadow: 5px 5px 40px 8px rgba(190, 255, 100, .2) !important;
    }

        .vid{
            margin-left: 50px;
           outline: 2px solid #111 !important;
           border-radius: 3px;

           min-width: 760px !important;
         }    

    .vid-details-top-row{
        display: flex;
        justify-content: space-between;
        padding: 0;
        height: 40px;
        margin-top: -10px;
    }   
    .page-left-container{
        margin-left: 20px;
    }




    .canvas-details{
        justify-content: flex-end;
        border-radius: 8px;
        /* background-color:#d090909; */
        display: flex;
        flex-direction: column;
        justify-content: center;
        margin-inline: auto;
        margin-top: 10px !important;
        width: 100%;
        padding: 15px !important;
        padding-top: 20px;

   }

     
     @@media (max-width: 1109px) {
        /* Styles for screens below 1110 pixels */
        .canvas-container {
            width: 100%;
        }

        #videoCanvas {
            width: 100%;
            height: auto;
        }

        /* Add additional styles for other elements */
        .page-left-container {
            max-width: 100%;
        }

        .vid-details {
            margin-left: 0;       
        }

        .suggested {
            margin-left: 0;
            grid-template-columns: repeat(2, 1fr); /* Adjust the number of columns as needed */
        }
     }

   


    @@media (max-width: 1000px) {
        .vid{
            min-width: 0 !important;
        }
        main{
            flex-direction: column !important;
        }
        .page-left-container{
            margin: 0;
            margin-top: 0;
            padding: 5px !important;
            
                margin-bottom: -30px;
        }    
         .video-container{
            margin: 0;
            margin-top: 0;
            padding: 0 !important;
         }
         
        .comments-section{
            width: 70%;
        }
        .page-right-container{
            width: 96%;
            margin-top: 0 !important;
        }
        .title-and-date{
             flex-direction: column;
             padding: 0 !important;
             margin: 0 !important;
        }

        .form-date{
            padding: 0 !important;
            margin: 0 !important;            
        }       
 
    }
    @@media(min-width: 930px){
        .page-right-container{
            padding: 0px 12px;
        }

        .lik-box {
            padding-left: 30px !important;
        }

    }
  

    @@media (max-width: 1125px){
        .page-left-container{
            margin-left: 0 !important;
        }        
    }

    @@media(min-width: 600px){
        .sug-img{
            width: 100%;
            height: 140px;
        }        
    }
    @@media(min-width: 400px){
        .sug-img{
            width: 100%;
            height: 160px;
        }        
    }
<!--END MEDIA QUERIES -->
 

<!-- CUSTOM VIDEO PLAYER CSS-->
    *, *::before, *::after{
        box-sizing: border-box;
    }

    body{
        margin: 0;
    }
    .video-container{
        position: relative;
        width: 100%;
        max-width: 1000px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        margin-inline: auto;
        margin-top: 30px;  
        background-color: black !important;
        margin-left: 0;
        margin-right: 5px;
    }
    .video-container.theater,
        .video-container.full-screen {
        max-width: initial;
        width: 100%;
        z-index: 9999;
    }
    .video-container.full-screen{
        max-height: 100vh;
    }
        .video-container.theater{
            top: 0;
            
            position: relative;
            width: 100%;  
            max-height: 90vh;
            padding: 0;
            margin: 0; 
            margin-left: 0 !important;
            bottom: 20px;
        }
        .video-container.theater video{
            margin-top: 0;
            padding: 0;
            width: 100%;  
            margin-left: 0 !important;
            max-height: 80vh !important;
        }        
    video{
        width: 100% !important;
        margin-left: 0 !important;
        padding-left: 0;
    }
    .video-controls-container{
        position: absolute;  
        bottom: 0;
        left: 0;
        right: 0;
        color: white;
        z-index: 999;
        opacity: 0;
        transition: opacity 150ms ease-in-out;
        padding-bottom: 10px;
    }
    .video-controls-container::before{
        content: "";
        position: absolute;
        bottom: 0;
        background: linear-gradient(to top, rgba(0, 0, 0, 0.75), transparent);
        width: 100%;
        aspect-ratio: 6 / 1;
        z-index: -1;
        pointer-events: none;
    }
    .video-container:hover .video-controls-container,
    .video-container:focus-within .video-controls-container,
    .video-container.paused .video-controls-container {
        opacity: 1;
    }
    .video-controls-container .controls{
        display: flex;
        gap: .5rem; 
        padding: .25rem;
        align-items: center;
        opacity:inherit;
=    }
    .video-controls-container .controls button{
        background: none; 
        border: none;
        color: inherit;
        padding: 0;
        height: 35px ;
        width: 35px;
        margin: 0;
        font-size: 1.1rem;
        cursor: pointer;
        opacity: .85;
        transition: opacity 150ms ease-in-out;
            padding-top: 5px;
        }
        .video-controls-container .controls button:hover {
            opacity: 1;
        }
    .video-container.paused .pause-icon{
        display: none;
    }
    .video-container:not(.paused) .play-icon{
        display: none;
    }

    .video-container.theater .tall {
        display: none;
    }

    .video-container:not(.theater) .wide {
        display: none;
    }

    .video-container.full-screen .open {
        display: none;
    }

    .video-container:not(.full-screen) .close {
        display: none;
    }

    .volume-high-icon,
    .volume-low-icon,
    .volume-muted-icon{

        display: none;
    }
    .video-container[data-volume-level="high"] .volume-high-icon{
        display: block;
    }
    .video-container[data-volume-level="low"] .volume-low-icon{
        display: block;
    }

    .video-container[data-volume-level="muted"] .volume-muted-icon {
        display: block;
    }
    .volume-container{
        display: flex;
        align-items: center;
    }
    .volume-slider{
        margin-top: 9px;
        width: 0;
        transform-origin: left;
        border-radius: 8px;
        transform: scaleX(0);
        transition: width 250ms ease-in-out, transform 250ms ease-in-out;
        background: var(--primary-color);
    }
    .volume-container:hover .volume-slider,
    .volume-slider:focus-within{
        width: 100px;
        transform: scaleX(1);
    }
   .duration-container{
       display: flex;
       align-items: center;
       gap: .25rem;
       flex-grow: 1;
       margin-top: auto;
       font-size: larger;
   }
   .timeline-container{
       height: 7px;
       margin-inline: .5rem;
       cursor: pointer;
       display: flex;
       align-items: center;
   }
       
    .timeline {
        background-color: rgba(100,100,100,.5);
        height: 7px;
        width: 100%;
        position: relative !important;
    }
    .timeline::before{
        content: "";
        position: absolute;
        left: 0;
        top: 0;
        bottom: 0;
        right: calc(100% - var(--preview-position) * 100%);
        background-color: rgba(150,150,150) !important;
        display: none;
    }
        .timeline::after {
            content: "";
            position: absolute;
            left: 0;
            top: 0;
            bottom: 0;
            right: calc(100% - var(--progress-position) * 100%);
            background-color: var(--primary-color) !important;
         }
        .timeline .thumb-indicator{
           --scale: 1;
           position: absolute;
            transform: translateX(-50%) scale(var(--scale));
            height: 200%;
           top: -50%;
           left: calc(var(--progress-position) * 100%);
            background-color: var(--primary-color);
            
           border-radius: 50%;
           transition: transform 150ms ease-in-out;
           aspect-ratio: 1 / 1; 
        }
        .timeline-container.scrubbing .timeline::before,
        .timeline-container:hover .timeline::before{
            display: block;
        }
        .timeline-container.scrubbing .thumb-indicator,
        .timeline-container:hover .thumb-indicator{
            --scale: 1;
        }
        .video-container.scrubbing .timeline,
        .timeline-container:hover .timeline {
            height: 100% !important;
        }
        input[type=range]{
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
        }
        input[type=range]::-webkit-slider-runnable-track{
            border-radius: 10px !important;
            height: 6px;
            cursor: pointer;
        }
        input[type=range]::-webkit-slider-thumb{
            background: var(--primary-color);
            border-radius: 10px;
            cursor: pointer;
            height: 12px;
            width: 12px;
            margin-top: -4px;
            margin-right: 5px;
            -webkit-appearance: none;
        }
        input[type=range]::-moz-range-track{
            border-radius: 10px;
            height: 3px;
            background-color: #fff;
        }

        input[type=range]::-moz-range-thumb{
            border-radius: 10px;
            cursor: pointer;
            height: 12px;
            width: 12px;
            margin-top: -4px;
            margin-right: 5px;
            background-color: #fff;
        }
      /*   .vid{
            width: 100%;
        } */

        /*MOBILE RESPONSIVENESS*/

        @@media(max-width: 450px){
        .suggested-videos-grid {
            gap: 3px !important;
        }
            .vid-title-txt{
               font-size: large;
            }
           
            .vid-details-bottom-row{
                padding-top: 6px !important;
            }
            .uploaded-date{
                font-size: xx-small !important;
            }
            .by-txt{
                font-size: small !important;
                margin-right: -4px;
            }
            .username-txt2 {
                    font-size: small !important;
                }

            .vid-details-top-row{
                margin-top: 3px;
            }
            .views-txt{
                margin-bottom: 4px;
                font-size: x-small !important;
            }
            .likes-ratio{
                font-size: medium !important;
                text-wrap: nowrap;
            }

            .sug-img {
                max-width: 190px !important;
            }
        }

    @@media(max-width: 370px) {
        .sug-img{
            max-width: 150px !important;
        }
    }
    .mobile-sidebar {
        background-color: black !important;
    }

    *{
        font-family: "Inter", sans-serif;
        font-optical-sizing: auto;
        font-style: normal;
    
    }
</style>

<div class="page-left-container">
    <p id="curr-user" style="display: none" >@Model.LoggedInUserId</p>
    <p id="curr-user-notloggedin" style="display: none">@Model.notLoggedInUserId</p>
    <p id="curr-vid" style="display: none">@Model.video.Id</p>
        <!--VIDEOJS  PLAYER  -->
    <div class="video-container paused " data-volume-level="high">  
                    <div class="video-controls-container ">
                         <div class="timeline-container">   

                             <div class="timeline">
                                <div class="thumb-indicator">

                                </div>
                             </div>
                         </div>
                         <div class="controls">
                             <button class="play-pause-btn">
                                <svg class="play-icon" viewBox="0 0 24 24">
                                    <path fill="currentColor" d="M8,5.14V19.14L19,12.14L8,5.14Z" />
                                </svg>
                                <svg class="pause-icon" viewBox="0 0 24 24">
                                    <path fill="currentColor" d="M14,19H18V5H14M6,19H10V5H6V19Z" />
                                </svg>
                             </button>
                             <div class="volume-container">
                                 <button class="mute-btn">

                                    <svg class="volume-high-icon" viewBox="0 0 24 24">
                                        <path fill="currentColor" d="M14,3.23V5.29C16.89,6.15 19,8.83 19,12C19,15.17 16.89,17.84 14,18.7V20.77C18,19.86 21,16.28 21,12C21,7.72 18,4.14 14,3.23M16.5,12C16.5,10.23 15.5,8.71 14,7.97V16C15.5,15.29 16.5,13.76 16.5,12M3,9V15H7L12,20V4L7,9H3Z" />
                                    </svg>
                                    <svg class="volume-low-icon" viewBox="0 0 24 24">
                                        <path fill="currentColor" d="M5,9V15H9L14,20V4L9,9M18.5,12C18.5,10.23 17.5,8.71 16,7.97V16C17.5,15.29 18.5,13.76 18.5,12Z" />
                                    </svg>
                                    <svg class="volume-muted-icon" viewBox="0 0 24 24">
                                        <path fill="currentColor" d="M12,4L9.91,6.09L12,8.18M4.27,3L3,4.27L7.73,9H3V15H7L12,20V13.27L16.25,17.53C15.58,18.04 14.83,18.46 14,18.7V20.77C15.38,20.45 16.63,19.82 17.68,18.96L19.73,21L21,19.73L12,10.73M19,12C19,12.94 18.8,13.82 18.46,14.64L19.97,16.15C20.62,14.91 21,13.5 21,12C21,7.72 18,4.14 14,3.23V5.29C16.89,6.15 19,8.83 19,12M16.5,12C16.5,10.23 15.5,8.71 14,7.97V10.18L16.45,12.63C16.5,12.43 16.5,12.21 16.5,12Z" />
                                    </svg>
                                 </button>
                                 <input class="volume-slider" type="range" min="0" max="1" step="any" value="1" />
                             </div>
                             <div class="duration-container"> 
                                 <div class="current-time">0:00</div>
                                 /
                                 <div class="total-time">10:00</div>
                             </div>
                             <button class="theater-btn">
                                <svg class="tall" viewBox="0 0 24 24">
                                    <path fill="currentColor" d="M19 6H5c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 10H5V8h14v8z" />
                                </svg>
                                <svg class="wide" viewBox="0 0 24 24">
                                    <path fill="currentColor" d="M19 7H5c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2zm0 8H5V9h14v6z" />
                                </svg>
                            </button>
                            <button class="full-screen-btn">
                                <svg class="open" viewBox="0 0 24 24">
                                    <path fill="currentColor" d="M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z" />
                                </svg>
                                <svg class="close" viewBox="0 0 24 24">
                                    <path fill="currentColor" d="M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z" />
                                </svg>
                            </button>

                         </div>

                   </div>


        <video class="vid" preload="auto" autoplay id="videoPlayer" >
                        <source src="@Model.video.VideoUrl" type="video/mp4">
                    </video>
@*                   <img class="video-watermark" src="~/img/bbtv-invisible.png" />
 *@                  
                 @*    <p class="record-edge">
                        Record Edge
                    </p> *@
                  <div class="video-stats-overlay">
                   @*  <div class="top-stats"> *@
                    <p class="stats-for-gooners">👁️ 38m today | 5h this week
</p>
                   @*  <p class="stats-for-gooners">Stats for gooners:</p>

                    <p class="stat1">12m 42s today</p> *@
                    @* <p class="stat2">1h 44m this week</p>
                    <p class="stat3">5h 5m lifetime</p> *@
                  @*   </div> *@
             
                   @*  <div class="bottom-stats">
                        <p class="stat4">Braincells lost: 3</p>
                <p class="stat5">Edges Today:5</p>
                    </div> *@

                  </div>
                    

                
    </div>
    <!-- VIDEO (canvas) DETAILS -->
    <div class="canvas-details">
        <div class="vid-details-top-row">
            <div class="title-and-date">
                <h2 class="vid-title-txt">
                    @Model.video.Title    
                </h2>
                
            </div>
            @*OLD LIKES*@
            @* <p>
            <svg class="o-icon o-icon-svg" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path d="M1 22h4V10H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 2 7.59 8.59C7.22 8.95 7 9.45 7 10v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z" fill-rule="nonzero"></path>
            </svg>
            @Model.video.FormattedLikes  |
            <svg class="o-icon o-icon-svg" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M23 2h-4v12h4V2zM1 13c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 22l6.58-6.59c.37-.36.59-.86.59-1.41V4c0-1.1-.9-2-2-2H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2z" fill-rule="nonzero"></path></svg>    @Model.video.FormattedDislikes
            </p>  *@
            <div class="top-row-second-box">
                <div class="likes-ratio">

                    <!-- LIKE BUTTON ON VIDEO-->


                    <div id="tooltip">
                        @* <div id='likeButton_@Model.video.Id' class='buttonH heartH like-btn' data-post-id="@Model.video.Id"></div> *@
                        <!--HEART BUTTON-->
                        <div class="likeL @Model.likeState" data-video-id=@Model.video.Id></div>

                        <span id="tooltiptext"><a class="tip-link" asp-action="Login" asp-controller="Home">Login</a> or <a asp-action="JoinNow" asp-controller="Home">Join</a> to save</span>
                    </div>

                    <p class="fave-txt">Favorites</p>
                </div>
            </div>
        </div>
        <div class="vid-details-bottom-row">
            <div class="date-cont">
                <p class="form-date" title="@Model.video.Views">
                    @Model.video.FormattedViews @(Model.video.Views == 1 ? "view" : "views")
                </p>
                
                <p class="form-date" title="@Model.video.UploadDate">| @Model.video.FormattedUploadDate </p>

            </div>
          
        </div>
        <div class="vid-details-last">
            <div class="details-last-first2">
                <span class="by-txt">Made By:</span><a class="username-txt2" asp-action="Profile" asp-controller="User" asp-route-userid="@Model.video.UserId">@@@Model.video.user.Username </a></p>
            </div>
            <p class="cat-p">
                <a class="category-txt" asp-action="Index" asp-controller="Video" asp-route-category="@Model.video.Category">#@Model.video.Category </a>
            </p>
        </div>
    </div>
     
    <!--COMMMENT SECTION-->
    <div class="comments-section" id="comments-section" data-is-authenticated="@Authenticate.IsAuthenticated(Context)">
        
        <div class="comments-top">
            <div class="comments-header">
                <div class="comments-header-title"> 
                    <div class="comments-header-title-left">
                        <p>Comments</p>
                        <span class=" dot ">• </span>
                        <span class="comments-number ">
                            @Model.video.Comments.Count
                        </span>
                    </div>

                    <div class="comments-header-title-right">
                        <div class="cht-new" id="cht-new">
                            <svg class="fire-svg" xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="grey" class="bi bi-fire" viewBox="0 0 16 16">
                                <path d="M8 16c3.314 0 6-2 6-5.5 0-1.5-.5-4-2.5-6 .25 1.5-1.25 2-1.25 2C11 4 9 .5 6 0c.357 2 .5 4-2 6-1.25 1-2 2.729-2 4.5C2 14 4.686 16 8 16m0-1c-1.657 0-3-1-3-2.75 0-.75.25-2 1.25-3C6.125 10 7 10.5 7 10.5c-.375-1.25.5-3.25 2-3.5-.179 1-.25 2 1 3 .625.5 1 1.364 1 2.25C11 14 9.657 15 8 15" />
                            </svg>
                            <p>New</p>
                        </div>
                        <div class="cht-top" id="cht-top">
                            <span class="o-icon"><svg class="o-icon o-icon-svg" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M18.902 10.768l-6.676-6.67a.333.333 0 00-.473 0l-6.656 6.67a.333.333 0 00.237.568h3.67v8.33c0 .185.15.334.334.334h5.338c.184 0 .334-.15.334-.333v-8.33h3.656a.334.334 0 00.309-.207.331.331 0 00-.073-.362z" fill-rule="nonzero"></path></svg></span>
                            <p>Top</p>
                        </div>
                    </div>
                </div>
            </div>
            
            <!--ADD A COMMENT -->
            <div class="comments-input-container">
                <div class="add-left">
                    <div class="avatar-container user-txt">
                        <div class="avatar-circle">
                            <span class="avatar-letter">U</span>
                        </div>                
                    </div>
                    <div class="comment-box">
                        <div class="comment-input" contenteditable="true" role="textbox"> <span class="placeholdert">Add a comment...</span> </div>
                    </div>
                </div>
                <button class="comment-submit" id="btnComment">COMMENT</button>
            </div>
        </div>



        <div class="comments-cont" >
            @if(Model.video.Comments.Count <= 0)
            {
            <h2 class="no-comments" id="no-comments">No comments</h2>
            }
            <!--LOOOP THROUGH EACH COMMENT -->
            @foreach (var comment in Model.video.Comments)
            {
               
                <div class="comment" data-datePosted=@comment.DatePosted>
                    <div class="avatar-container">
                        <div class="avatar-circle">
                            <span class="avatar-letter">@comment.User.AvatarLetter</span>
                        </div>
                        <span class="diamondD">
                            <svg class="o-icon o-icon-svg " viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                                <path d="M8.06419 14.7411c-.10982-.0012-.21803-.0265-.31697-.0742-.09894-.0477-.18618-.1166-.25554-.2017L.672817 6.15741c-.10166-.1231-.161673-.27526-.171411-.43461-.009738-.15935.0313-.31768.117215-.45224L3.00522 1.5931c.06641-.10241.15756-.18643.26503-.2443.10747-.05787.2278-.08772.34985-.08679l8.695.06208c.1236.00146.2448.03333.3531.0928.1083.05946.2002.14469.2677.24815l2.4389 3.70997c.0882.13302.1318.29072.1244.4502-.0075.15947-.0655.31243-.1658.43665L8.63276 14.475c-.06879.0842-.15557.1519-.25396.1981-.0984.0462-.2059.0698-.31461.069v-.001z" fill="#37C4B3"></path>
                                <path d="M10.9376 5.80361L8.06418 14.743 5.08044 5.76223l-4.578103-.0335c-.012524-.16198.028313-.3236.116275-.46018L3.00522 1.59306c.06943-.10727.16597-.19429.27984-.25225l2.91083 4.4293 3.60848.02562 2.84773-4.38792c.1124.05814.2109.14485.2838.25423L15.3748 5.373c.09.13702.1332.2995.1231.46313l-4.5603-.0335v.00098z" fill="#53E7D3"></path>
                                <path d="M7.96372 1.29253h.00788l2.966 4.51109-5.87486-.04237 2.90098-4.46872z" fill="#B9F5ED"></path>
                                <path opacity=".1" d="M2.64359 6.17018s4.98999 8.46842 4.84809 8.29592L.672817 6.15639c-.10166-.1231-.161673-.27526-.171411-.43461-.009738-.15935.0313-.31768.117215-.45224L3.00522 1.59307c.06618-.10278.15723-.18719.26472-.24541.10748-.05823.22793-.08837.35016-.08765l1.97077.01379c-.12214-.00082-.24253.02917-.35.08722-.10748.05804-.19858.14226-.26488.24486l-2.3866 3.67647c-.08614.13466-.12731.29319-.11757.45275.00974.15955.06988.3119.17177.43508z" fill="#000"></path>
                            </svg>
                        </span>

                    </div>

                    <div class="comment-body">                             
                            <div class="comment-top">
                                <div class="content">
                                    <span class="comments-username">@@@comment.User.Username</span>
                                    <p class="date-posted-txt" title="@comment.DatePosted">@comment.FormattedUploadDate</p>
                       
                                </div>
                                <p class="comment-content">@comment.Content  </p>
                            </div>
                       

                        <div class="comment-actions">
                            <div class="like-btn" data-comment-id="@comment.Id">
                                <svg class="o-icon o-icon-svg like-btns" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M1 22h4V10H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 2 7.59 8.59C7.22 8.95 7 9.45 7 10v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z" fill-rule="nonzero"></path></svg>
                                <span id="like-count-@comment.Id">@comment.LikesCount</span>

                            </div>

                            <div class="dislike-btn " data-comment-id="@comment.Id">
                                <svg class="o-icon o-icon-svg like-btns" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M23 2h-4v12h4V2zM1 13c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 22l6.58-6.59c.37-.36.59-.86.59-1.41V4c0-1.1-.9-2-2-2H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2z" fill-rule="nonzero"></path></svg>
                                <span class="dislike-count-@comment.Id">
                                    
                                </span>

                            </div>
 
                            <div class="reply-btn" data-username="@comment.User.Username" onclick="openReplyBox('@comment.Id', '@comment.User.Username')">
                                REPLY    
                            </div>
                           
                        </div>  
                        <!-- Reply Input Box (Initially hidden) -->
                        <div class="reply-box-container" id="reply-box-@comment.Id" style="display: none;">
                            <div class="avatar-container reply-avatar">
                                <div class="avatar-circle">
                                    <span class="avatar-letter">@comment.User.AvatarLetter</span>
                                </div>
                                <span class="diamondD">
                                    <svg class="o-icon o-icon-svg " viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M8.06419 14.7411c-.10982-.0012-.21803-.0265-.31697-.0742-.09894-.0477-.18618-.1166-.25554-.2017L.672817 6.15741c-.10166-.1231-.161673-.27526-.171411-.43461-.009738-.15935.0313-.31768.117215-.45224L3.00522 1.5931c.06641-.10241.15756-.18643.26503-.2443.10747-.05787.2278-.08772.34985-.08679l8.695.06208c.1236.00146.2448.03333.3531.0928.1083.05946.2002.14469.2677.24815l2.4389 3.70997c.0882.13302.1318.29072.1244.4502-.0075.15947-.0655.31243-.1658.43665L8.63276 14.475c-.06879.0842-.15557.1519-.25396.1981-.0984.0462-.2059.0698-.31461.069v-.001z" fill="#37C4B3"></path>
                                        <path d="M10.9376 5.80361L8.06418 14.743 5.08044 5.76223l-4.578103-.0335c-.012524-.16198.028313-.3236.116275-.46018L3.00522 1.59306c.06943-.10727.16597-.19429.27984-.25225l2.91083 4.4293 3.60848.02562 2.84773-4.38792c.1124.05814.2109.14485.2838.25423L15.3748 5.373c.09.13702.1332.2995.1231.46313l-4.5603-.0335v.00098z" fill="#53E7D3"></path>
                                        <path d="M7.96372 1.29253h.00788l2.966 4.51109-5.87486-.04237 2.90098-4.46872z" fill="#B9F5ED"></path>
                                        <path opacity=".1" d="M2.64359 6.17018s4.98999 8.46842 4.84809 8.29592L.672817 6.15639c-.10166-.1231-.161673-.27526-.171411-.43461-.009738-.15935.0313-.31768.117215-.45224L3.00522 1.59307c.06618-.10278.15723-.18719.26472-.24541.10748-.05823.22793-.08837.35016-.08765l1.97077.01379c-.12214-.00082-.24253.02917-.35.08722-.10748.05804-.19858.14226-.26488.24486l-2.3866 3.67647c-.08614.13466-.12731.29319-.11757.45275.00974.15955.06988.3119.17177.43508z" fill="#000"></path>
                                    </svg>
                                </span>

                            </div>

                            <div class="input-actions">
                                <div contenteditable="true" class="reply-input"></div>


                                <div class="reply-actions">
                                    <button class="submit-reply-btn" @* onclick="submitReply('@comment.Id', @Model.video.Id)" *@>Submit</button>
                                    <button onclick="closeReplyBox('@comment.Id')">Cancel</button>
                                </div>
                            </div>
                        </div>

                        <!-- Replies Section  -->
                        <div class="replies-container " id="replies-@comment.Id">
                            
                            @if(comment.Replies != null){
                                @foreach (var reply in comment.Replies)
                                { 

                                    <div class="comment reply-border" data-datePosted=@reply.DatePosted>
                                        <div class="avatar-container">
                                            <div class="avatar-circle">
                                                <span class="avatar-letter">@reply.User.AvatarLetter</span>
                                            </div>
                                            <span class="diamondD">
                                                <svg class="o-icon o-icon-svg " viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                                                    <path d="M8.06419 14.7411c-.10982-.0012-.21803-.0265-.31697-.0742-.09894-.0477-.18618-.1166-.25554-.2017L.672817 6.15741c-.10166-.1231-.161673-.27526-.171411-.43461-.009738-.15935.0313-.31768.117215-.45224L3.00522 1.5931c.06641-.10241.15756-.18643.26503-.2443.10747-.05787.2278-.08772.34985-.08679l8.695.06208c.1236.00146.2448.03333.3531.0928.1083.05946.2002.14469.2677.24815l2.4389 3.70997c.0882.13302.1318.29072.1244.4502-.0075.15947-.0655.31243-.1658.43665L8.63276 14.475c-.06879.0842-.15557.1519-.25396.1981-.0984.0462-.2059.0698-.31461.069v-.001z" fill="#37C4B3"></path>
                                                    <path d="M10.9376 5.80361L8.06418 14.743 5.08044 5.76223l-4.578103-.0335c-.012524-.16198.028313-.3236.116275-.46018L3.00522 1.59306c.06943-.10727.16597-.19429.27984-.25225l2.91083 4.4293 3.60848.02562 2.84773-4.38792c.1124.05814.2109.14485.2838.25423L15.3748 5.373c.09.13702.1332.2995.1231.46313l-4.5603-.0335v.00098z" fill="#53E7D3"></path>
                                                    <path d="M7.96372 1.29253h.00788l2.966 4.51109-5.87486-.04237 2.90098-4.46872z" fill="#B9F5ED"></path>
                                                    <path opacity=".1" d="M2.64359 6.17018s4.98999 8.46842 4.84809 8.29592L.672817 6.15639c-.10166-.1231-.161673-.27526-.171411-.43461-.009738-.15935.0313-.31768.117215-.45224L3.00522 1.59307c.06618-.10278.15723-.18719.26472-.24541.10748-.05823.22793-.08837.35016-.08765l1.97077.01379c-.12214-.00082-.24253.02917-.35.08722-.10748.05804-.19858.14226-.26488.24486l-2.3866 3.67647c-.08614.13466-.12731.29319-.11757.45275.00974.15955.06988.3119.17177.43508z" fill="#000"></path>
                                                </svg>
                                            </span>

                                        </div>

                                        <div class="comment-body">
                                            <div class="comment-top">
                                                <div class="content">
                                                    <span class="comments-username">@(reply.User.Username)</span>
                                                    <p class="date-posted-txt">@reply.FormattedUploadDate</p>
                                                </div>
                                                <p class="comment-content"><span class="reply-to-username">@reply.UserUsername</span> @reply.Content  </p>
                                            </div>
                                            <div class="comment-actions">
                                                <!--Like button-->
                                                <div class="like-btn" data-comment-id="@reply.Id">
                                                    <svg class="o-icon o-icon-svg like-btns" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M1 22h4V10H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 2 7.59 8.59C7.22 8.95 7 9.45 7 10v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z" fill-rule="nonzero"></path></svg>
                                                    <span id="like-count-@reply.Id">@reply.LikesCount</span>

                                                </div>
                                                <!--Dislike button-->
                                                <div class="dislike-btn " data-comment-id="@reply.Id">
                                                    <svg class="o-icon o-icon-svg like-btns" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M23 2h-4v12h4V2zM1 13c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 22l6.58-6.59c.37-.36.59-.86.59-1.41V4c0-1.1-.9-2-2-2H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2z" fill-rule="nonzero"></path></svg>
                                                    <span class="dislike-count-@reply.Id">
                                                      
                                                    </span>

                                                </div>                                 
                                                <div class="reply-btn" data-username="@reply.User.Username" onclick="openReplyBox('@reply.Id', '@reply.User.Username')">
                                                    REPLY
                                                </div>
                                                
                                            </div>
                                            <div class="reply-box-container" id="reply-box-@reply.Id" style="display: none;">
                                                <div class="avatar-container reply-avatar">
                                                    <div class="avatar-circle">
                                                        <span class="avatar-letter">@reply.User.AvatarLetter</span>
                                                    </div>
                                                    <span class="diamondD">
                                                        <svg class="o-icon o-icon-svg " viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                                                            <path d="M8.06419 14.7411c-.10982-.0012-.21803-.0265-.31697-.0742-.09894-.0477-.18618-.1166-.25554-.2017L.672817 6.15741c-.10166-.1231-.161673-.27526-.171411-.43461-.009738-.15935.0313-.31768.117215-.45224L3.00522 1.5931c.06641-.10241.15756-.18643.26503-.2443.10747-.05787.2278-.08772.34985-.08679l8.695.06208c.1236.00146.2448.03333.3531.0928.1083.05946.2002.14469.2677.24815l2.4389 3.70997c.0882.13302.1318.29072.1244.4502-.0075.15947-.0655.31243-.1658.43665L8.63276 14.475c-.06879.0842-.15557.1519-.25396.1981-.0984.0462-.2059.0698-.31461.069v-.001z" fill="#37C4B3"></path>
                                                            <path d="M10.9376 5.80361L8.06418 14.743 5.08044 5.76223l-4.578103-.0335c-.012524-.16198.028313-.3236.116275-.46018L3.00522 1.59306c.06943-.10727.16597-.19429.27984-.25225l2.91083 4.4293 3.60848.02562 2.84773-4.38792c.1124.05814.2109.14485.2838.25423L15.3748 5.373c.09.13702.1332.2995.1231.46313l-4.5603-.0335v.00098z" fill="#53E7D3"></path>
                                                            <path d="M7.96372 1.29253h.00788l2.966 4.51109-5.87486-.04237 2.90098-4.46872z" fill="#B9F5ED"></path>
                                                            <path opacity=".1" d="M2.64359 6.17018s4.98999 8.46842 4.84809 8.29592L.672817 6.15639c-.10166-.1231-.161673-.27526-.171411-.43461-.009738-.15935.0313-.31768.117215-.45224L3.00522 1.59307c.06618-.10278.15723-.18719.26472-.24541.10748-.05823.22793-.08837.35016-.08765l1.97077.01379c-.12214-.00082-.24253.02917-.35.08722-.10748.05804-.19858.14226-.26488.24486l-2.3866 3.67647c-.08614.13466-.12731.29319-.11757.45275.00974.15955.06988.3119.17177.43508z" fill="#000"></path>
                                                        </svg>
                                                    </span>

                                                </div>

                                                <div class="input-actions">
                                                    <div contenteditable="true" class="reply-input"></div>


                                                    <div class="reply-actions">
                                                        <button class="submit-reply-btn" @* onclick="submitReply('@reply.Id', @Model.video.Id)" *@>Submit</button>
                                                        <button onclick="closeReplyBox('@reply.Id')">Cancel</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>


                                     </div>
 
                                }
                            }
                        </div>
                    
                    </div>

                   
                </div>
            }
        </div>
    </div>

    <!--Vid details CSS -->
    <style>
        .reply-border{
            border-radius:0px 0px 0px 30px !important;
            margin-left: -10px !important;
        }
        .replies-container{
            width: 100%;
            margin-left: 5px;
            display: flex;
            flex-direction: column;
        }
        .reply-box-container {
            margin-top: 10px;
            margin-left: 10px;
        }
        .reply-avatar{
            margin-right: 15px;
        }

        .reply-input {
            width: 100%;
            height: 50px;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #555;
            border-radius: 4px;
            background: transparent;
            color: #a6a6a6 !important;
            min-width: 270px !important;            
        }

        .reply-actions button {
            margin-right: 10px;
            padding: 5px 10px;
            background-color: #222;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

            .reply-actions button:hover {
                background-color: var(--secondary-color);
            }
        .reply-btn{
            padding: 0 0.5rem 0 0.5rem;
            font-size: 0.85rem;
            letter-spacing: 0.06em;
            min-height: 1.75rem;
            color: #888;
            transition: .5s ease;
        }
        .reply-btn:hover{
            cursor: pointer;
            color: #fff;
        }

        .comment-body{
            display: flex;
            flex-direction: column;
        }
        .like-btns:hover{
            fill: var(--primary-color);
            cursor: pointer;
            transition: ease .5s;
        }
        .like-btn{
            margin-right: 14px;
            padding: 1px;
        }
        .dislike-btn{
            margin-right: 14px;
            padding: 1px;
        }
        .like-btns{
            width: 20px !important;
        }
        .comment-actions{
            display: flex;
        }
        .no-comments{
            position: absolute;
            top: 0;
            bottom: 0;            
            left: auto;
            right: auto;
            transform: translateX(50%);
            transform: translateY(50%);
        }
        .no-overflow{
            overflow: hidden !important;
        }
        body{
            overflow-x: hidden;
/*             background-color: white !important;
 */        }
        .date-cont {
            display: flex;
        }
        @@media(max-width: 1000px){   
            .custom-navbar {
                position: fixed;
                top: 0px;
                width: 100%;
            }
            .comments-header-title-left {
                font-size: 15px !important;
            }
            .form-date{
                font-size: 15px !important;
                color: #555 !important;
            }

            .vid-title-txt{
                font-size: 20px;
            }
    

            .dot.wht {
             display: none;
            }

            .comments-top, .comments-input-container, .comment-box {
                max-width: 100vw;
            }
            .comment-input{
                width: 20% !important ;
            }              
            .form-date{
                margin-right: 7px !important;
            }
            .category-txt{
                font-size: small !important;
            }
        }
        @@media(max-width: 400px){

        }


        .add-left{
            display: flex;
            width: 100%;
        }
        .comment-content{
            padding: 5px;
            color: #e1e1e1;
            font-size: 16px;
            margin-top: -4px;
        }
        .content{
            display: flex;
        }
        .dot.wht{
            color: #888;
            font-size: 20px;
        }
        .title-and-date{
            display: flex;
        }
        .date-cont{
            display: flex;
            align-content: center !important;
            flex-wrap: nowrap !important;
        }
        .form-date{
            color: #818181 !important;
            font-size: 16px;
            margin-left: 4px;     
            align-self: center;
        }
        .date-cont P {
            margin-bottom: 0 !important;
        }
        .comments-top{
            position: sticky;
            top: 0px;
            z-index: 9;
            background-color: #070707;
            padding-bottom: 15px;
            height: 100px;
            margin: 0 !important;
            border-bottom: 1px solid #262626;
            border-top: 10px solid black !important;
        }
        .comments-username{
            color: var(--accent-color);
            margin-right: 10px;
            font-size: 13px;
        }
        .comments-cont{
            overflow-y: scroll;
        }
        .date-posted-txt{
            color: #8a8a8a;
            font-size: 13px;
            right: 0;
            bottom: 0;
        }
        .video-watermark{
            height: 30px; 
            width: 140px; 
            background: transparent;
            position: absolute; 
            right: 0;
            bottom: 0;
        }
        .record-edge{
            position: absolute;
            right: 0;
            top: 50%;
            background-color: rgba(197, 0, 39, 1);
            border-radius: 10px;
            padding: 10px;
        }
        .record-edge:hover{
                background-color: rgba(209, 0, 39, 1);
            cursor: pointer;
        }
        .video-stats-overlay{
            position: absolute;
            top: 0;
            margin: 0px;
            padding: 0 !important;

        }
        .video-stats-overlay p{
            margin: 0;
                font-size: 17px !important;
                padding: 0 !important;
        }
        .stat1{
            color: red;
        }
        .stat2{
            color: green;
        }
        .stat3{
            color: blue;
        }
        .stats-for-gooners{
            color: #919191; 
        }
        .likeL:hover{
            cursor: pointer;
        }
        .likeL {
            margin-top: 0px;
            height: 35px !important;
            width: 35px !important;
        }

        .like-noL {
            background: url("/img/dislike.svg") no-repeat;
        }

        .like-yes {
            background: url("/img/like.svg") no-repeat;
            margin-right: 2px;
        }

        #tooltip {
            position: relative !important;
            display: inline-block !important;
        }


            #tooltip #tooltiptext {
                visibility: hidden !important;
                background-color: rgba(17, 17, 17, 0.99) !important;
                color: #fff !important;
                text-align: center !important;
                border-radius: 6px !important;
                padding: 9px 7px;
                font-size: medium;
                z-index: 99999;
                /* Position vthe tooltip */
                position: absolute !important;
                width: 150px;
                bottom: 100%;
                left: 50%;
                margin-left: -50px; 
                margin-bottom: -2px !important;
                margin-right: 10px !important;
            }
            #tooltip a{
                color: var(--primary-color);
            }#tooltip a:hover{
                color: var(--primary-color-hover);
                text-decoration: underline;
            }
            #tooltip:hover #tooltiptext {
                visibility: visible !important;
            }
        .uploaded-date{
            color: rgba(131, 131, 131, 0.82);
        }
        .by-txt{
            color: #999;
            margin-left: 5px;
        }
        .top-row-second-box{
            display: flex;;
        }
        .details-last-first2{
            display: flex;
        }
        
       
        .username-txt2{
            margin-left: 5px;
            color: var(--accent-color) !important;
            margin-top: 0px !important;
        }
        .username-txt2:hover{
            color: rgb(217, 220, 255) !important;
        }
        .vid-details-last{
            display: flex;
           color: #555;
           justify-content: space-between;
           align-content: center;
           align-items: center;
        }
        .views-txt{
            font-size: large;
            color: #999;
        }
        .vid-details-bottom-row{
            display: flex;
            justify-content: space-between;
            border-radius: 10px;
        }
        .vid-title-txt{
            margin-top: 4px;
            color: #AaAaAa;
            max-width: 400px;
        }
        .vid-details-top-row{
            height: auto;
        }
        .category-txt{
            color: #777 !important;
            font-size: large;
        }
        .category-txt:hover{
                color: #555 !important;
            cursor: pointer;
        }    
        .likes-ratio{
            font-size: 19px;
            font-weight: 400;
            color: white;
            margin-bottom: -10px !important;
            padding:2px 8px !important;
            font-family: Dubai;
            display: flex;
            background-color: #191919;
            border-radius: 7px;
        }
        .fave-txt{
            margin: 0 !important;
            padding: 0px  4px!important;
        }
        .top-row-second-box{
            display: flex;
            flex-direction: row; /* Assuming you want to center vertically */
            align-items: center; /* Center children vertically */
            justify-content: center; /* Center children horizontally */
            text-align: center; /* Center text horizontally */
        }
        .buttonH {
            width: 10px;
            height: 10px;
            position: relative;
            margin-top: 2px;
            margin-left: 0px;
            border-radius: 5px;
            background: none;
            cursor: pointer;
            transition: background 0.5s ease;
            margin-right: 20px;
        }


<!--original comment section css-->
#Region "collapse"
 /* OLD COMMENTS CSS*/
      
        .placeholdert {
            color: #a6a6a6 !important;
            pointer-events: none;
        }
        
        .comment-submit{
            position: absolute;
            right: 0;
            bottom: 0;
            background: #000;
            color: inherit;
            border: none;
            padding: 0;
            font: inherit;
            cursor: pointer;
            outline: 1px solid var(--primary-color);
            padding: 5px;
            transition: all .3s ease;
            -webkit-transition: all .3s ease;
            z-index: 99;
        }
        .comment-submit:hover{
                background-color: rgba(193, 218, 110, 0.80);
        }
            .comment-submit:focus {
                outline: 1px solid rgba(193, 218, 110, 0.80); /* Add focus styling here */
            }
         .comment-input{
            border-bottom: 1px solid grey;
            overflow: auto;
         }

         .comment-box{
            position: relative;
            margin-left: 20px;
            width: 80% !important;
        }
        .user-txt{
            display:flex;
            margin-left: 20px;
           
        }
        .fire-svg{
            margin-top: 3px;
            margin-right: 3px;
        }
        .cht-top{
            display: flex;
            margin-left: 10px;
            padding-right: 10px;
            border-radius: 12px;
            color: #999;
        }
        .cht-new{
            display: flex;
            padding: 0px 5px;
            border-radius: 12px;
            padding-right: 10px;
            color: #999;
        }

        .cht-new:hover,.cht-top:hover{
            cursor: pointer;
            color: white !important;
        }
        .comments-header-title-right{
            display: flex;
            margin-left: 30px;
        }
        .comments-header-title-left{
            display: flex;
            font-size: 18px;
            color: #bbb;
             
        }

        .comments-section p{
            margin: 0 !important;
        }
        .avatar-container {
            width: 40px;
            height: 40px;
            min-width: 40px !important; /* Add this line */
            min-height: 40px;
            position: relative;
        }

        .avatar-circle {
            width: 100%;
            height: 100%;
            background-color: #444;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            min-width: 40px !important; /* Add this line */
        }

        .avatar-letter {
            font-size: 16px;
            font-weight: bold;
            color: white;
        }

        .diamondD {
            position: absolute;
            bottom: 6px;  
            right: -6px; 
            height: 10px !important;

        }
    .dot{
        margin-left: 10px;
    }
    .comments-number{
        padding: 0px 10px;
    }

        .comments-header {
            display: flex;
            position: relative;
            align-items: center;
            padding: 5px;
        }
        .comments-header-title{
            display: flex;
            height: 30px;  
            align-content: center;
        }
        .comments-section {            
            position: relative;
            padding: 0px 15px  !important;
            align-items: center;
            border-radius: 12px !important;
            margin-top: 0px !important;
            width: 100% !important;
            overflow-y: scroll;
            outline: 1px solid #222;
            overflow-x: hidden;
            height: 800px;
            background-color: #070707;
        }
        .black-nav{
            background: #000;
        }
        .comment {
            display: flex;
            gap: 8px;
            padding: 10px;
            border-bottom: 1px solid #111 !important;
            border-left: 1px solid #191919;
            position: relative;
            border-radius: 10px 0px 0px 20px; 
            margin-left: 5px;
            margin-top: 15px;
        }

        .comment-input {
            position: relative;
            width: 90% !important;
            height: 30px;
            border-bottom: 1px solid grey;
            overflow: auto;
        }

        .comments-input-container {
            display: flex;
            height: auto;
            justify-content: space-between;
            bottom: 0;             
        }

            .comment .avatar {
                flex: 0 0 auto; /* PrevSDSent avatar from shrinking */
                height: 30px;
                border-radius: 10px;                
            }

            .comment .content {
                flex: 1 1 auto; /* Allow content to grow/shrink */
                color: #ccc;
            }
            main{
                display: flex;
                flex-direction: row;
            }


 
     
 </style>    
</div>

<!--RIGHT SIDE OF PAGE (SUGGESTED VIDEOS) -->
<div class="page-right-container">   
    @if (!Authenticate.IsAuthenticated(Context)|| username == "")
    {
        <!--join premium container-->
        <div class="join-premium-container">
            <p class="cta-text">Watch this video and 1000+ more with Premium</p>
            <a asp-action="JoinNow" asp-controller="Home">JOIN VIP</a>
        </div>
    }
           

    <div class="suggested-videos-grid">
        <!--Suggested videos -->
         @for (int i = 0; i < Model.suggestedVideos.Count; i++)
         {
            <div class="suggested-video-item">
                <a asp-action="Watch" asp-controller="Video" asp-route-title="@Model.suggestedVideos[i].Title.Replace(' ', '-')">
                    <div class="video">
                        <div class="sug-vid-img">
                    
                                <img src="@Model.suggestedVideos[i].ThumbnailUrl"   class="sug-img" /> 
                       
                        </div>
                        <div class="sug-vid-content">

                            <h5 class="sug-video-title">@Model.suggestedVideos[i].Title</h5>
                                                        <div class="tooltip-box">@Model.suggestedVideos[i].Title</div>

                          
                            <div class="sug-vid-content-bottom">                                
                                <div class="bottom-row">
                                    <div class="sug-upload-date">
                                        @Model.suggestedVideos[i].FormattedUploadDate

                                    </div>
                                <div>
                                        <img src="~/img/vision.png" height="22px" width="20px" />

                                        @Model.suggestedVideos[i].FormattedViews


                                </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
         }
    </div>
 

</div>


<style>    
    .tooltip-box {
        display: none;
        position: absolute;
        bottom: 100%;
        left: 0;
        background: rgba(0,0,0,0.8);
        color: #fff;
        padding: 5px 10px;
        border-radius: 4px;
        white-space: normal;
        width: max-content;
        max-width: 180px;
        z-index: 10;
    }

    .sug-video-title:hover + .tooltip-box {
        display: block;
    }
    .bottom-row{
        width: 100% !important;
        display: flex;
        justify-content:space-between;
        padding: 0px 6px;
    }

    .suggested-video-item{
   s
    }
    .suggested-video-item:hover{
        border-radius: 10px !important;
    }
    .no-comments{
        color: #777 !important;
    }
    .sug-video-title{
        color: #bbb !important;
        margin-top: 10px;
        display: -webkit-box;
        -webkit-line-clamp: 2; /* limits to 2 lines */
        -webkit-box-orient: vertical;
        overflow: hidden;
     }
    .sug-vid-content{
        color: #9a9a9a !important;  
        position: relative;
    }

    .sug-vid-content-bottom {
        position: relative;
        
    }
    .suggested-videos-grid{
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 18px;
        margin-top: 10px !important;       
    }
        main{
            margin-top: -20px !important;
        }
    /*RIGHT SIDE PAGE CSS*/
    .join-premium-container {
        background-image: url('https://front.sexlikereal.com/s/refactor/images/banners/bg-banner-premium-side.jpg');
        background-size: cover; /* This ensures the image covers the entire container */
        background-position: center; /* This centers the image within the container */
        background-repeat: no-repeat;
        display: flex;
        flex-direction: column;
        height: 130px;
        justify-content: center;
        align-content: center;
        position: relative;
        background-color: #222;
        margin-top: 30px;
        border-radius: 6px;
        text-align: center;
        border: 1px solid var(--accent-color);
        font-weight: bold;
        color: var(--accent-color);
        max-width: 460px;
        width: 100%;
    }
    .join-premium-container a{
            color: var(--primary-color);
        }

    .cta-text {
    }

    @@media(max-width: 450px){
        .join-premium-container{
            max-width: 390px !important;
        }
        .sug-upload-date{
            font-size: 12px !important;
        }
        .suggested-video-item{
            margin: 4px;
        }
    }

    .page-right-container {
        flex-grow: 0;
        max-width: 560px;
        position: relative;
        margin-bottom: 300px;
        margin-top: 12px !important; 
        margin-left: 10px
    }
   

    .title-link {
        color: white;
    }

        .title-link:hover {
            color: white;
        }

    .vid-category:hover {
        color: #989898;
    }
    .vid-category{
        color: #666 ;
    }
    .reply-to-username{
        color: deepskyblue !important;
    }

    #toggleSidebar{
        margin-bottom: -5px !important;
    }
</style>

 <!-- HIDES PAGE_RIGHT_COTNAINER in THEATER MODE-->


<!--NEWWw LIKE BUTTON FUNCTIONALITY-->
<script>

    document.addEventListener('DOMContentLoaded', function () {
        const currentVideoId = @Model.video.Id;
        setTimeout(() => {
            fetch('/Video/RegisterView', {
                method: 'POST',
                body: JSON.stringify({ videoId: currentVideoId }),
                headers: { 'Content-Type': 'application/json' }
            });
        }, 10000); // after 10s

        const sidebar = document.getElementById('sidebar');
        const toggleButton = document.getElementById('toggleSidebar');
        const main = document.querySelector('main');
        const commentsCont = document.getElementById('comments-section');
        const noComments = document.getElementById('no-comments');

        function toggleModal() {
            loginModal.classList.toggle('hidden');
            overlay.classList.toggle('hidden');
        }
        window.closeModal = function () {
            loginModal.style.display = "none"; // Hide the modal
        }
                const commentsSection = document.getElementById("comments-section");
                const loginModal = document.getElementById("login-modal");
                const isAuthenticated = commentsSection.dataset.isAuthenticated === "True"; // Convert to boolean
                console.log("isAuthenticated: " + isAuthenticated);
                const overlay = document.querySelector('.overlay');

        if(noComments){
            commentsCont.classList.add('no-overflow');
        }

        main.classList.add('sidebar-closed');
        sidebar.classList.add('closed');

        const likeButtons = document.querySelectorAll('.likeL');
        const currentUser = @Html.Raw(Json.Serialize(ViewBag.CurrentUser)); // Access the user from the ViewBag

        console.log(currentUser?.username + " " + currentUser?.id);

        // Check if user is logged in
        const isLoggedIn = currentUser && currentUser.username && currentUser.username !== "";
        
        likeButtons.forEach(button => {
            const tooltip = button.parentElement.querySelector('#tooltiptext');

            if (isLoggedIn) {
                // User is logged in, hide tooltip
                tooltip.style.display = 'none';
                console.log("User is logged in");
            } else {
                // User is not logged in, show tooltip
                tooltip.style.display = 'block';
                console.log("User is not logged in");
            }
           
            button.addEventListener('click', (event) => {
                if (!isLoggedIn) {
                    @* // User is not logged in, redirect to login
                        event.preventDefault();
                        console.log("User must log in to like this video.");
                        const baseUrl = window.location.origin;
                        window.location.href = `${baseUrl}/Home/Login`; *@
                        toggleModal();
                    console.log("togglemodal");
                } else {
                    // User is logged in, toggle like state
                    event.target.classList.toggle("like-noL");
                    event.target.classList.toggle("like-yes");

                    const videoId = button.getAttribute('data-video-id');

                    const isLiked = event.target.classList.contains("like-yes");

                    if (isLiked) {
                        console.log("✅💾 Saving Favorite... " + videoId);



                        // Proceed with liking the video
                         fetch(`/Video/Like/${videoId}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': getAntiForgeryToken() // Include anti-forgery token
                            },
                            body: JSON.stringify({ videoId }) // Pass post ID in the request body
                        })
                            .then(response => response.json())
                            .then(data => {
                                console.log("Like count: " + data.likeCount);
                                // Handle success response
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                // Handle error
                            }); 

                    } else {
                        console.log("❌ Removing Favorite..." + videoId);

                        // Proceed with unliking the video
                         fetch(`/Video/Unlike/${videoId}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': getAntiForgeryToken() // Include anti-forgery token
                            },
                            body: JSON.stringify({ videoId }) // Pass post ID in the request body
                        })
                            .then(response => response.json())
                            .then(data => {
                                console.log("Like count: " + data.likeCount);
                                // Handle success response
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                // Handle error
                            }); 
                    }
                }
            });
        });

        // Function to retrieve the anti-forgery token from the page
        function getAntiForgeryToken() {
            const tokenElement = document.querySelector('input[name="__RequestVerificationToken"]');
            return tokenElement ? tokenElement.value : '';
        }
    });
</script>




<!-- NEW - COMMENT JS-->
 <script type="text/javascript">
    const commentInput = document.querySelector('.comment-input');
    const submitBtn = document.querySelector('.comment-submit');
    const commentsContainer = document.querySelector('.comments-section');
    const placeholder = commentInput.querySelector('.placeholdert');
    const btnComment = document.getElementById('btnComment');
         
   
    // Add the placeholder back if the user clears the comment input
    commentInput.addEventListener('input', () => {
        if (commentInput.textContent.trim() === '') {
            if (!placeholder) {
                const newPlaceholder = document.createElement('span');
                newPlaceholder.classList.add('placeholdert');
                newPlaceholder.textContent = 'Add a comment...';
                commentInput.appendChild(newPlaceholder);                
            }
        }
    });
    // Restore placeholder when the input loses focus (user clicks anywhere else on the page)
    document.addEventListener('click', (event) => {
        const isCommentInput = event.target.closest('.comment-input');
        if (!isCommentInput && commentInput.textContent.trim() === '') {
            
                const newPlaceholder = document.createElement('span');
                newPlaceholder.classList.add('placeholdert');
                newPlaceholder.textContent = 'Add a comment...';
                commentInput.appendChild(newPlaceholder);
            console.log("No placeholder, adding one...");
        }
    });

    // Add the placeholder back if the user clears the comment input
     commentInput.addEventListener('input', () => {

        if (commentInput.textContent.trim() === '' || commentInput.textContent.trim() === "Add a comment...") {
            btnComment.disabled = true;
            console.log("comment submit btn disbaled");
        } else {
            btnComment.disabled = false;
            console.log("valid comment added, btn submit enabled");
        }
        
     });
    submitBtn.addEventListener('click', () => {
        console.log("submit btn clicked....");

        if (commentInput.textContent.trim() === '' || commentInput.textContent.trim() === "Add a comment...") {
            btnComment.disabled = true;
            console.log("comment submit btn disbaled");
        } else {
            btnComment.disabled = false;
            console.log("valid comment added, btn submit enabled");
        }

        const commentText = commentInput.textContent.trim();
        const strippedCommentText = commentText.replace(/@@\w+\s?/, '');

        if (strippedCommentText && strippedCommentText !== "Add a comment...") {
            // Your logic to submit the comment
            console.log('Comment submitted:', strippedCommentText);

            fetch('/Video/AddComment', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ 
                    commentText: strippedCommentText,
                    videoId: '@Model.video.Id'
                })

            })
                .then(response => response.json())
                .then(data => {
                    // Handle success (e.g., add the new comment to the UI)
                    console.log(data);


                    const commentSection = document.querySelector('.comments-cont');

                    // Create a new div for the comment
                    const newComment = document.createElement('div');
                    newComment.classList.add('comment');
                    newComment.innerHTML = `
                    <div class="avatar-container">
                        <div class="avatar-circle">
                            <span class="avatar-letter">${data.comment.user.avatarLetter}</span>
                                <span class="diamondD">
                                <svg class="o-icon o-icon-svg " viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M8.06419 14.7411c-.10982-.0012-.21803-.0265-.31697-.0742-.09894-.0477-.18618-.1166-.25554-.2017L.672817 6.15741c-.10166-.1231-.161673-.27526-.171411-.43461-.009738-.15935.0313-.31768.117215-.45224L3.00522 1.5931c.06641-.10241.15756-.18643.26503-.2443.10747-.05787.2278-.08772.34985-.08679l8.695.06208c.1236.00146.2448.03333.3531.0928.1083.05946.2002.14469.2677.24815l2.4389 3.70997c.0882.13302.1318.29072.1244.4502-.0075.15947-.0655.31243-.1658.43665L8.63276 14.475c-.06879.0842-.15557.1519-.25396.1981-.0984.0462-.2059.0698-.31461.069v-.001z" fill="#37C4B3"></path>
                                    <path d="M10.9376 5.80361L8.06418 14.743 5.08044 5.76223l-4.578103-.0335c-.012524-.16198.028313-.3236.116275-.46018L3.00522 1.59306c.06943-.10727.16597-.19429.27984-.25225l2.91083 4.4293 3.60848.02562 2.84773-4.38792c.1124.05814.2109.14485.2838.25423L15.3748 5.373c.09.13702.1332.2995.1231.46313l-4.5603-.0335v.00098z" fill="#53E7D3"></path>
                                    <path d="M7.96372 1.29253h.00788l2.966 4.51109-5.87486-.04237 2.90098-4.46872z" fill="#B9F5ED"></path>
                                    <path opacity=".1" d="M2.64359 6.17018s4.98999 8.46842 4.84809 8.29592L.672817 6.15639c-.10166-.1231-.161673-.27526-.171411-.43461-.009738-.15935.0313-.31768.117215-.45224L3.00522 1.59307c.06618-.10278.15723-.18719.26472-.24541.10748-.05823.22793-.08837.35016-.08765l1.97077.01379c-.12214-.00082-.24253.02917-.35.08722-.10748.05804-.19858.14226-.26488.24486l-2.3866 3.67647c-.08614.13466-.12731.29319-.11757.45275.00974.15955.06988.3119.17177.43508z" fill="#000"></path>
                                </svg>
                            </span>
                        </div>
                    </div>
                    <div class="comment-body">
                        <div class="comment-top">
                            <div class="content">
                                <span class="comments-username">${data.comment.user.username}</span>
                                <p class="date-posted-txt">${data.comment.formattedUploadDate}</p>
                            </div>
                            <p class="comment-content">${data.comment.content}</p>
                        </div>
                        <div class="comment-actions">
                                <div class="like-btn">
                                    <svg class="o-icon o-icon-svg like-btns" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M1 22h4V10H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 2 7.59 8.59C7.22 8.95 7 9.45 7 10v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z" fill-rule="nonzero"></path></svg>
                                </div>
                                <div class="dislike-btn">
                                    <svg class="o-icon o-icon-svg like-btns" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M23 2h-4v12h4V2zM1 13c0 1.1.9 2 2 2h6.31l-.95 4.57-.03.32c0 .41.17.79.44 1.06L9.83 22l6.58-6.59c.37-.36.59-.86.59-1.41V4c0-1.1-.9-2-2-2H6c-.83 0-1.54.5-1.84 1.22l-3.02 7.05c-.09.23-.14.47-.14.73v2z" fill-rule="nonzero"></path></svg>
                                </div>
                            <div class="reply-btn">
                                REPLY
                            </div>
                        </div>
                    </div>
                `;

                    // Append the new comment to the comment section
                    commentSection.prepend(newComment);

                    // Clear the comment input
                    commentInput.textContent = '';
                    submitButton.disabled = true;
                })
                .catch(error => {
                    // Handle errors
                    console.error('Error:', error);
                });


            // Clear the input after submitting
            commentInput.textContent = '';
            // Restore placeholder after clearing input
            const newPlaceholder = document.createElement('span');
            newPlaceholder.classList.add('placeholdert');
            newPlaceholder.textContent = 'Add a comment...';
            commentInput.appendChild(newPlaceholder);
        }
    });
    
    // Remove the placeholder when the user clicks inside the contenteditable div
    commentInput.addEventListener('click', () => {
        if (placeholder) {
            console.log('placeholder exists, removing it. ')
            placeholder.remove();
            commentInput.textContent = '';
            placeholdertextContent = '';
        }
    });




//Liking comments functionality
    document.addEventListener('DOMContentLoaded', function () {

        const commentsSection = document.getElementById("comments-section");
        const loginModal = document.getElementById("login-modal");
        const isAuthenticated = commentsSection.dataset.isAuthenticated === "True"; // Convert to boolean
        console.log("isAuthenticated: " + isAuthenticated);
        const overlay = document.querySelector('.overlay');

        commentsSection.addEventListener("click", function (event) {
            console.log("Comment section clicked");
            // Check if the user is not authenticated
            if (!isAuthenticated) {
                // Check if the clicked element is a like button, reply button, or anywhere in the comments container
                    console.log("here");
                    event.preventDefault(); // Prevent default action
                    showModal();  
                    toggleModal();
            }
        });

        function showModal() {
            loginModal.style.display = "block"; // Show the modal
        }

        function toggleModal() {
            loginModal.classList.toggle('hidden');
            overlay.classList.toggle('hidden');
        }
 

        document.querySelectorAll('.like-btn').forEach(function (button) {
            button.addEventListener('click', function () {
                var commentId = this.getAttribute('data-comment-id');
                console.log(commentId);

                sendLikeDislikeRequest(commentId, true);
            });
        });

        document.querySelectorAll('.dislike-btn').forEach(function (button) {
            button.addEventListener('click', function () {
                var commentId = this.getAttribute('data-comment-id');               
                sendLikeDislikeRequest(commentId, false);
            });
        });

        function sendLikeDislikeRequest(commentId, isLike) {
            fetch('/Video/LikeComment', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ commentId: commentId, isLike: isLike })
            })
                .then(response => response.json())
                .then(data => {
                    console.log(commentId);

                    if (data.success) {
                        const likeCountElement = document.getElementById('like-count-' + commentId);
                        const dislikeCountElement = document.getElementById('dislike-count-' + commentId);

                        // Update like count
                        if (likeCountElement) {
                            likeCountElement.innerText = data.likeCount; // Update like count
                        } else {
                            console.warn('Like count element not found for comment ID:', commentId);
                        }
                    } else {    
                        console.log("User not logged in, nothing saved.");
                    }
                })
                .catch(error => console.error('Error:', error));
        }

    });

    //Reply to comment
    // Function to open the reply input box
    function openReplyBox(commentId, username) {
        const commentsSection = document.getElementById("comments-section");

        const isAuthenticated = commentsSection.dataset.isAuthenticated === "True"; // Convert to boolean
        console.log(isAuthenticated);

        if (isAuthenticated) {
            const replyBox = document.getElementById(`reply-box-${commentId}`);

            if (replyBox) {
                replyBox.style.display = 'flex'; // Show the reply input box
                 const replyInput = replyBox.querySelector('.reply-input');
                    replyInput.innerHTML = `<span class="reply-to-username">@@${username}</span>&nbsp;`; // Pre-fill with the username and add a space
    
                    const range = document.createRange();
                    const selection = window.getSelection();
    
                    // Set cursor at the end of the pre-filled username
                    range.setStart(replyInput.childNodes[1], 1); // Positioning after the username + space
                    range.collapse(true);
    
                    selection.removeAllRanges();
                    selection.addRange(range);
    
                    replyInput.focus(); // Focus on the reply input


                // Handle Submit button
                const submitBtn = replyBox.querySelector('.submit-reply-btn');
                submitBtn.addEventListener('click', function () {
                    const replyContent = replyInput.textContent.trim();
                    const strippedReplyText = replyContent.replace(/@@\w+\s?/, '');
                    console.log(strippedReplyText);
                    if (strippedReplyText) {
                        console.log(`Submitting reply to comment ID ${commentId} with message: ${strippedReplyText}`);
                    
                        // Add your fetch logic to submit the reply here
                        fetch('/Video/AddReply', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                                replyText: strippedReplyText,
                                commentId: commentId
                            })
                        })
                        .then(response => response.json())
                        .then(data => {
                            
                            if (data.success) {

                                console.log('Reply successfully submitted:', data);


                            }
                            replyBox.style.display = 'none'; // Optionally hide the reply box after submission

                        })
                        .catch(error => {
                            console.error('Error submitting reply:', error);
                        });
                    }
                });
            }
        } else {
            console.log("User is not authenticated. Show login modal or redirect.");
            // Show modal for non-authenticated users or redirect to login
        }
}

    // Function to close the reply input box
    function closeReplyBox(commentId) { 
        console.log("close reply clicked");
        const replyBox = document.getElementById(`reply-box-${commentId}`);
        console.log(replyBox);
        replyBox.style.display = 'none'; // Hide the reply input box
    }

    document.querySelectorAll('.sug-video-title').forEach(el => {
        const length = el.textContent.length;
        if (length > 60) {
            el.style.fontSize = '9px';
        } else if (length > 30) {
            el.style.fontSize = '14px';
        } else {
            el.style.fontSize = '16px';
        }
    });
</script>








