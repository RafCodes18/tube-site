@model VRhfo.BL.Models.User
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

<link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>

<style>
    button, input[type="submit"], input[type="reset"] {
        background: none;
        color: inherit;
        border: none;
        padding: 0;
        font: inherit;
        cursor: pointer;
        outline: inherit;
    }
    body {
        background: #111 !important;
    }

    .custom-navbar{
        background-color: #212121;
    }
    .settings-form {
        padding: 22px 44px;
        border-radius:3px;
        height: 470px;
         min-width: 480px;
        display: flex;
        flex-direction: column;
        color: #e8e8e8;
        margin: 18px;
        background-color: rgba(27, 27, 27, 0.59);
        box-shadow: 0 1px 1px hsl(0deg 0% 0% / 0.075), 0 2px 2px hsl(0deg 0% 0% / 0.075), 0 4px 4px hsl(0deg 0% 0% / 0.075), 0 8px 8px hsl(0deg 0% 0% / 0.075), 0 16px 16px hsl(0deg 0% 0% / 0.075);
    }


            .wrapperM{
                display: flex;
<noscript b-apjdry3v75>…</noscript>                justify-content: center;
                margin-top: 40px;
                width: 100vw !important;
                margin-left: 50px;
    }
            @@media(max-width: 1000px){
               .wrapperM{
                   flex-direction: column;
                   margin: 0 !important;
               }
               .subscription-form{
                   margin: 0 !important;
                   max-width: 200px !important;
               }
               .account-settings{
                   width: 100vw !important;
                   margin-top: 50px !important;
               }
               .settings-form{
                   width: 90% !important;
                   max-width: 600px !important;
               }
            }

    #sidebar {
        background-color: #111;
    }
    .input-box {
        width: 100%;
        background: transparent !important;
        border: none;
        outline: none !important;
        border: 2px solid rgba(255, 255, 255, .2) !important;
        border-radius: 10px !important;
        font-size: 16px;
        color: #fff;
        padding: 10px 45px 10px 20px !important;
        margin-bottom: 13px;
    }
       .save-button{
           border-radius: 10px;
            background-color: #ccc;
            padding: 10px 0px;
           color: black;
           font-size: x-large;
           border: none;
       }     
       .save-button:hover{
            background: rgba(199, 199, 199, 0.95);
            transition: ease-in .2s all;
        }
        label{
            font-size: larger;
        }

        @@media(min-width: 415px){
            .settings-form{
                width: 460px;
            }
        }
        .input-container.userna{
            margin-top: 14px;
        }

</style>

<div class="wrapperM">
    <div class="account-settings">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <form method="post" asp-controller="User" asp-action="Update" class="settings-form">
            <h2 class="form-title">Account Settings</h2>

            <div class="input-container userna">
                <label>Username</label>
                <input class="input-box username-input" value="@Model.Username" readonly />
            </div>

            <div class="input-container">
                <label>Email</label>
                <input class="input-box email-input" value="@Model.Email" readonly />
            </div>

            <div class="input-container">
                <label>Password</label>
                <input class="input-box password-input" value="@Model.Password" type="password" readonly />
            </div>

            <input class="save-button" type="button" value="Save Changes" onClick="window.location.reload();" />
        </form>
    </div>
   

    <!--SUBSCRIPTIONS-->
    <div class="account-settings">
     <div class="settings-form subscription-form">
        
        <h2 class="form-title">Subscriptions</h2>

        <div class="subscriptions-container">
            <div class="subscription-container active">
                <div class="tier-container">
                    <h4>@Model.Subscription_Tier </h4>
                    <p>Active <span style="color: green">●</span></p>
                </div>
                <div class="buttons-box">
                    <button class="cancel-btn" onclick="toggleCancelModal()">Cancel </button>
                    <a target="_blank" rel="noopener noreferrer" href="https://epoch.com/"><button class="manage-btn">Manage Payments ↗</button></a>
                </div>           
                <p class="next-charge">Your next charge of $20.00 will be processed on 10/21/2024 </p>
            </div>

            <div class="subscription-container">
                <div class="tier-container">
                    <h4>Yearly </h4>
                </div>
                <div class="buttons-box">
                    <button class="upgrade-btn">Upgrade and Save </button>
                </div>

            </div>

            <div class="subscription-container">
                <div class="tier-container">
                    <h4>Lifetime </h4>
                </div>
                <div class="buttons-box">
                    <button class="upgrade-btn">Upgrade and Save </button>
                </div>

            </div>
        </div>
        <input type="submit" value="submit" />
     </div>
    </div>
</div>
 

<div class="modal w3-modal" id="passwordModal" tabindex="-1" role="dialog" aria-labelledby="passwordModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="passwordModalLabel">Confirm Password</h5>
             
                    <span class="x"  onclick="document.getElementById('passwordModal').style.display='none'">
                        x
                    </span>
            </div>
            <div class="modal-body">
                <input type="text" class="modal-password-input" placeholder="Enter your password" />
            </div>
            <div class="modal-footer">
                <a href="#" class="reset"> Reset password</a>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="document.getElementById('passwordModal').style.display='none'">Cancel</button>
                <button type="button" class="btn btn-primary modal-confirm-button">Confirm</button>
            </div>
        </div>
    </div>
</div>


<div id="cancelModal" class="">
    <p class="login-custom-x" onclick="toggleCancelModal()">x</p>
    <h1>Are you sure you want to cancel? </h1>
    <p>Canceling your subscription will delete your account and all data associated with it. </p>
    <p>Your last charge was 09/20/2024. </p>
    <p>You will not be charged further. </p>
    <p>You will lose access to all premium features effective immediately. </p>

    <button class="cancel-btn" >Yes end my subscription</button>
</div>
<div class="overlay2 hidden">
</div>
<style>
    @@media(max-width: 688px){
        .account-settings{
            max-width: 550px !important;
            min-width: 320px !important;
            width: 100% !important;
        }
        .settings-form{
            max-width: 550px !important;
            min-width: 320px !important;
            width: 100% !important;
        }
        .subscription-form{
            max-width: 550px !important;
            min-width: 320px !important;
            width: 100% !important;
            margin-top: -50px !important;
        }
    }
    
    .login-custom-x {
        position: absolute;
        right: 0;
        top: 0;
        margin-right: 12px;
        margin-top: 3px;
        font-size: x-large;
        color: #888;
    }

        .login-custom-x:hover {
            border-radius: 8px !important;
            cursor: pointer;
            color: #fff;
            transition: 300ms;
        }
    #cancelModal{
        display: none;        
        position: fixed;
        top: 20%;
        margin-left: auto !important;
        margin-right: auto !important;
        left: 0 !important;
        right: 0 !important;
        z-index: 99999;
        width: 500px;
        background-color: black !important;
        height: 500px;
        padding: 20px;
        border-radius: 10px;
    }
    .hidden2{
        display: block !important;
    }
    .subscriptions-container{
        margin-top: -30px;
    }
    .next-charge{
        position: absolute;
        bottom: 0;
        font-size: small;
        color: var(--accent-color);
        margin-bottom: 5px;
    }
    .upgrade-btn{
        background: var(--secondary-color);      
        border-radius: 10px;
        color: white;
        padding: 10px;
        font-weight: 600;
    }
    .active{
        border: 1px dashed var(--primary-color) !important;
        background-color: var(--primary-color-dark) !important;
    }
    .tier-container{
        display: flex;        
    }
    .tier-container h4{
        margin-right: 14px;
    }
    .tier-container p{
        margin-top: 3px;
    }
    .subscription-form{
        max-width: 700px !important;
        min-width: 600px;
        position: relative;
        width: 100%;
        display: flex;
    }
    .cancel-btn{
        background-color: rgba(230, 30, 30, .3) !important;
        border: 1px solid darkred !important;
        border-radius: 6px;
        padding: 6px;
        color: white !important;
        margin-right: 5px;
    }

    .cancel-btn:hover {
        background-color: rgba(230, 30, 30, .4) !important  ;
            transition: ease .5s all;
        }
    .manage-btn{
        background-color: rgba(100,100,100,.5) !important;
        border-radius: 4px;
        padding: 7px;
        color: white !important;
        margin-right: -16px;
    }
    .manage-btn:hover {
            background-color: rgba(100,100,100,.6) !important;
            transition: ease .5s all;
        }
    .subscription-container{
        width: 100%;
        border: 1px dashed grey;
        padding: 30px;
        background-color: rgba(10,10,10,.4);
        border-radius: 10px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: -30px;
        margin-top: 50px;
        position: relative;
    }
    .black-nav {
        background: #212121 !important;
    }
    .modal-footer{
        border: none !important;
        outline: none !important;
    }
    .reset{
        margin-right: 14px;
    }
    .x{
         padding: 0px 10px !important;
        font-size: large;
        border-radius: 3px;
        margin-top: -23px;
    }
    .x:hover{
        background-color: #222;
        cursor: pointer;
    }
    .modal-content{
        background-color: rgb(19, 19, 19) !important;
        border: none !important;
        max-width: 300px !important;
/*      border: 1px solid rgba(242, 49, 146, 0.53) !important;
 */     
        padding-top: 4px;
        border: 1px solid var(--accent-color) !important;
        border-radius: 10px;
        z-index: 999999999999999999 !important;
    }

    .overlay2 {
        position: fixed;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        background-color: #000;
        opacity: 0.8;
        z-index: 999;
    }
    .modal-password-input{
        background-color: transparent !important;
        color: #fff !important;
        width: 100%;
        border: 1px solid var(--accent-color) !important;
        padding: 12px;
        border-radius: 9px;
        margin-bottom: 10px;
        font-size: large;
        font-weight: 300;
    }
    
    .modal-password-input::placeholder{
        color: #666 !important;
    }

    .modal-dialog {
        display: flex !important;
        justify-content: center !important;
        align-items: center !important;
        min-height: 100vh; /* Make sure it covers the full height */
        z-index: 999999999999999999 !important;
    }
</style>
<script>


    document.addEventListener('DOMContentLoaded', function () {
        const sidebar = document.getElementById('sidebar');
        const toggleButton = document.getElementById('toggleSidebar');
        const main = document.querySelector('main');

        main.classList.add('sidebar-closed');
        sidebar.classList.add('closed');

        const likeButtons = document.querySelectorAll('.likeL');
        const currentUser = @Html.Raw(Json.Serialize(ViewBag.CurrentUser)); // Access the user from the ViewBag
    });
    document.addEventListener('DOMContentLoaded', function () {
        const usernameInput = document.querySelector('.username-input');
        const emailInput = document.querySelector('.email-input');
        const passwordInput = document.querySelector('.password-input');

        const modal = document.getElementById('passwordModal');
        const passwordInput2 = document.querySelector('.modal-password-input');
        const confirmButton = document.querySelector('.modal-confirm-button');
        const overlay2 = document.querySelector('.overlay2');

        let currentEditingInput = null;
        let isPasswordConfirmed = false;

        function toggleOverlay() {
            overlay2.classList.toggle('hidden');

        }

        function showModal(input) {
            if (!isPasswordConfirmed) {
                currentEditingInput = input;
                modal.style.display = 'block';
            }
            overlay2.classList.toggle('hidden');

        }

        function hideModal() {
            currentEditingInput = null;
            modal.style.display = 'none';
            passwordInput2.value = '';
            toggleOverlay();
        }

        function confirmPasswordAndEdit() {
            if (passwordInput2.value === '@Model.Password') {
                usernameInput.removeAttribute('readonly');
                emailInput.removeAttribute('readonly');
                passwordInput.removeAttribute('readonly');
                isPasswordConfirmed = true;
                hideModal();
                usernameInput.focus();
                toggleOverlay();
            } else {
                alert('Incorrect password. Please try again.');
            }
        }

        usernameInput.addEventListener('click', () => showModal(usernameInput));
        emailInput.addEventListener('click', () => showModal(emailInput));
        passwordInput.addEventListener('click', () => showModal(passwordInput));

        confirmButton.addEventListener('click', confirmPasswordAndEdit);

        window.addEventListener('click', (event) => {
            if (event.target === modal) {
                hideModal();
                toggleOverlay();
            }
        });
    });

    const cancelModal = document.getElementById("cancelModal");
    function toggleCancelModal() {
        cancelModal.classList.toggle("hidden2");
    }
</script>