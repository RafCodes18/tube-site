@model VRhfo.BL.Models.User
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

<link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>

<style>
    body {
        background: rgb(21, 21, 21);
    }

    .settings-form {
        border: 1px solid rgb(91, 91, 91, .88);
        padding: 20px;
        border-radius: 8px;
        width: 620px;
        height: 440px;
        margin-top: 20px;
        min-width: 280px;
        display: flex;
        flex-direction: column;
        color: rgb(205, 205, 205);
        margin: 18px;
    }


            .wrapperM{
                display: flex;
                justify-content: center;
                align-items: center;
            }
            @@media(max-width: 350px){
               .settings-form{
               }
            }

    .input-box {
        width: 100%;
        background: transparent !important;
        border: none;
        outline: none !important;
        border: 2px solid rgba(255, 255, 255, .2) !important;
        border-radius: 14px !important;
        font-size: 16px;
        color: #fff;
        padding: 10px 45px 10px 20px !important;
    }
       .save-button{
           border-radius: 10px;
        background: hsla(0, 0%, 36%, 1);
        background: linear-gradient(180deg, hsla(0, 0%, 36%, 1) 0%, hsla(0, 0%, 23%, 1) 99%);
        background: -moz-linear-gradient(180deg, hsla(0, 0%, 36%, 1) 0%, hsla(0, 0%, 23%, 1) 99%);
        background: -webkit-linear-gradient(180deg, hsla(0, 0%, 36%, 1) 0%, hsla(0, 0%, 23%, 1) 99%);
        filter: progid: DXImageTransform.Microsoft.gradient( startColorstr="#5D5D5D", endColorstr="#3B3B3B", GradientType=1 );
           padding: 10px 0px;
           color: white;
           font-size: x-large;
           border: none;
       }     
       .save-button:hover{
            background: rgba(159, 159, 159, 0.25);
        }
        label{
            font-size: larger;
        }
</style>

<div class="wrapperM">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <form method="post" asp-controller="User" asp-action="Update" class="settings-form">
        <h2 class="form-title">Account Settings</h2>

        <div class="input-container">
            <label>Username</label>
            <input class="input-box username-input" value="@Model.Username" readonly />
        </div>

        <div class="input-container">
            <label>Email</label>
            <input class="input-box email-input" value="@Model.Email" readonly />
        </div>

        <div class="input-container">
            <label>Password</label>
            <input class="input-box password-input" value="@Model.Password" type="password" readonly />
        </div>

        <input class="save-button" type="button" value="Save" />
    </form>
</div>

<div class="modal w3-modal" id="passwordModal" tabindex="-1" role="dialog" aria-labelledby="passwordModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="passwordModalLabel">Enter Password</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span class="x" aria-hidden="true" onclick="document.getElementById('passwordModal').style.display='none'">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input type="password" class="modal-password-input" placeholder="Enter your password" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="document.getElementById('passwordModal').style.display='none'">Cancel</button>
                <button type="button" class="btn btn-primary modal-confirm-button">Confirm</button>
            </div>
        </div>
    </div>
</div>
<style>
    .x{
        padding: 10px !important;
    }
    .modal-content{
        background-color: rgb(19, 19, 19) !important;
        border: none !important;
        max-width: 300px !important;
     border: 1px solid grey !important;
    }
    .modal-password-input{
        background-color: #222 !important;
        color: white;
        width: 100%;
        border: none !important;
    }

    .modal-dialog {
        display: flex !important;
        justify-content: center !important;
        align-items: center !important;
        min-height: 100vh; /* Make sure it covers the full height */
     
    }
</style>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const usernameInput = document.querySelector('.username-input');
        const emailInput = document.querySelector('.email-input');
        const passwordInput = document.querySelector('.password-input');

        const modal = document.getElementById('passwordModal');
        const passwordInput2 = document.querySelector('.modal-password-input');
        const confirmButton = document.querySelector('.modal-confirm-button');

        let currentEditingInput = null;
        let isPasswordConfirmed = false;


        function showModal(input) {
            if (!isPasswordConfirmed) {
                currentEditingInput = input;
                modal.style.display = 'block';
            }
        }

        function hideModal() {
            currentEditingInput = null;
            modal.style.display = 'none';
            passwordInput2.value = '';
        }

        function confirmPasswordAndEdit() {
            if (passwordInput2.value === '@Model.Password') {
                usernameInput.removeAttribute('readonly');
                emailInput.removeAttribute('readonly');
                passwordInput.removeAttribute('readonly');
                isPasswordConfirmed = true;
                hideModal();
            } else {
                alert('Incorrect password. Please try again.');
            }
        }

        usernameInput.addEventListener('click', () => showModal(usernameInput));
        emailInput.addEventListener('click', () => showModal(emailInput));
        passwordInput.addEventListener('click', () => showModal(passwordInput));

        confirmButton.addEventListener('click', confirmPasswordAndEdit);

        window.addEventListener('click', (event) => {
            if (event.target === modal) {
                hideModal();
            }
        });
    });
</script>